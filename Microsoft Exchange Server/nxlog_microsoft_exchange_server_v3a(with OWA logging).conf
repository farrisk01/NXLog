#
# Configuration for converting and sending Windows logs
# to AlienVault USM Anywhere.
#
# Last modification: 2022-11-28 by farrisk01@gmail.com
#


define ROOT C:\Program Files\nxlog
define OUTPUT_DESTINATION_ADDRESS [SENSOR IP ADDRESS]
define OUTPUT_DESTINATION_PORT 514

Moduledir %ROOT%\modules
CacheDir %ROOT%\data
Pidfile %ROOT%\data\nxlog.pid
SpoolDir %ROOT%\data
LogFile %ROOT%\data\nxlog.log


<Extension json>
    Module      xm_json
</Extension>

<Extension syslog>
    Module      xm_syslog
</Extension>

<Input internal>
    Module      im_internal
</Input>

<Input eventlog>
    Module  im_msvistalog
    <QueryXML>
        <QueryList>
            <Query Id='0'>
                <Select Path="Application">*</Select>
                <Select Path="System">*</Select>
                <Select Path="Security">*</Select>
            </Query>
        </QueryList>
    </QueryXML>
    <Exec>
        if ($EventID == 4627) OR ($EventID == 4634) OR ($EventID == 4656) OR ($EventID == 4658) OR ($EventID == 5156) OR ($EventID == 5158)
            drop();
        else if ($Channel == 'Security') and ($EventID == 4624) and ($Version == 1)
            $Message =~ s/\s*An account was successfully logged on.*$/An account was successfully logged on./s;
		else if ($Channel == 'Security') and ($EventID == 4624) and ($Version == 2)
            $Message =~ s/\s*An account was successfully logged on.*$/An account was successfully logged on./s;
		else if ($Channel == 'Security') and ($EventID == 4624)
            $Message =~ s/\s*This event is generated when a logon session is created.*$/An account was successfully logged on./s;
    else if ($Channel == 'Security') and ($EventID == 4625) and ($Version == 0)
            $Message =~ s/\s*An account failed to log on.*$/An account failed to log on./s;
		else if ($Channel == 'Security') and ($EventID == 4625)
            $Message =~ s/\s*This event is generated when a logon request fails.*$/An account failed to log on./s;
		else if ($Channel == 'Security') and ($EventID == 4648) and ($Version == 0)
            $Message =~ s/\s*A logon was attempted using explicit credentials.*$/A logon was attempted using explicit credentials./s;
		else if ($Channel == 'Security') and ($EventID == 4657)
            $Message =~ s/\s*A registry value was modified.*$/A registry value was modified./s;
		else if ($Channel == 'Security') and ($EventID == 4661)
            $Message =~ s/\s*A handle to an object was requested.*$/A handle to an object was requested./s;
    else if ($Channel == 'Security') and ($EventID == 4662)
            $Message =~ s/\s*An operation was performed on an object.*$/An operation was performed on an object./s;
		else if ($Channel == 'Security') and ($EventID == 4663)
            $Message =~ s/\s*An attempt was made to access an object.*$/An attempt was made to access an object./s;
		else if ($Channel == 'Security') and ($EventID == 4672)
            $Message =~ s/\s*Special privileges assigned to new logon.*$/Special privileges assigned to new logon./s;
		else if ($Channel == 'Security') and ($EventID == 4674)
            $Message =~ s/\s*An operation was attempted on a privileged object.*$/An operation was attempted on a privileged object./s;
		else if ($Channel == 'Security') and ($EventID == 4688)
            $Message =~ s/\s*A new process has been created.*$/A new process has been created./s;
		else if ($Channel == 'Security') and ($EventID == 4690)
            $Message =~ s/\s*An attempt was made to duplicate a handle to an object.*$/An attempt was made to duplicate a handle to an object./s;
		else if ($Channel == 'Security') and ($EventID == 4768) and ($Version == 0)
            $Message =~ s/\s*A Kerberos authentication ticket \(TGT\) was requested.*$/A Kerberos authentication ticket (TGT) was requested./s;
		else if ($Channel == 'Security') and ($EventID == 4768)
            $Message =~ s/\s*Certificate information is only provided.*$/A Kerberos authentication ticket (TGT) was requested./s;
		else if ($Channel == 'Security') and ($EventID == 4769) and ($Version == 0)
            $Message =~ s/\s*A Kerberos service ticket was requested.*$/A Kerberos service ticket was requested./s;
		else if ($Channel == 'Security') and ($EventID == 4769)
            $Message =~ s/\s*This event is generated every time access is requested.*$/A Kerberos service ticket was requested./s;
		else if ($Channel == 'Security') and ($EventID == 4770)
            $Message =~ s/\s*A Kerberos service ticket was renewed.*$/A Kerberos service ticket was renewed./s;
    else if ($Channel == 'Security') and ($EventID == 4771) and ($Version == 0)
            $Message =~ s/\s*Kerberos pre-authentication failed.*$/Kerberos pre-authentication failed./s;
		else if ($Channel == 'Security') and ($EventID == 4771)
            $Message =~ s/\s*Certificate information is only provided.*$/Kerberos pre-authentication failed./s;
    else if ($Channel == 'Security') and ($EventID == 4776)
            $Message =~ s/\s*The computer attempted to validate the credentials for an account.*$/The computer attempted to validate the credentials for an account./s;
		else if ($Channel == 'Security') and ($EventID == 5136)
            $Message =~ s/\s*A directory service object was modified.*$/A directory service object was modified./s;
    else if ($Channel == 'Security') and ($EventID == 5140)
            $Message =~ s/\s*A network share object was accessed.*$/A network share object was accessed./s;
    else if ($Channel == 'Security') and ($EventID == 5145)
            $Message =~ s/\s*A network share object was checked to see whether client can be granted desired access.*$/A network share object was checked to see whether client can be granted desired access./s;
		else if ($Channel == 'Security') and ($EventID == 6272)
            $Message =~ s/\s*Network Policy Server granted access to a user.*$/Network Policy Server granted access to a user./s;
		else if ($Channel == 'Security') and ($EventID == 6278)
            $Message =~ s/\s*Network Policy Server granted full access to a user because the host met the defined health policy.*$/Network Policy Server granted full access to a user because the host met the defined health policy./s;

        # Update the $raw_event field
        $raw_event = $EventTime + ' ' + $Message;
    </Exec>
</Input>

<Output out>

Module om_udp
Host        %OUTPUT_DESTINATION_ADDRESS%
Port        %OUTPUT_DESTINATION_PORT%
Exec        $EventTime = integer($EventTime) / 1000000;
Exec        $EventReceivedTime = integer($EventReceivedTime) / 1000000;
Exec        $Message = to_json(); to_syslog_bsd();

</Output>

<Route 1>
Path 	eventlog, internal => out
</Route>


#######################################################################
####                          EXCHANGE                            #####
#######################################################################

<Extension transform_alienvault_csv_exchange>
Module         	xm_csv
Fields	    	date_time, client_ip, client_hostname, server_ip, server_hostname, source_context, connector_id, source, event_id, internal_message_id, message_id, network_message_id, recipient_address, recipient_status, total_bytes, recipient_count, related_recipient_address, reference, message_subject, sender_address, return_path, message_info, directionality, tenant_id, original_client_ip, original_server_ip, custom_data, transport_traffic_type, log_id, schema_version
FieldTypes 		string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string
Delimiter      	,
</Extension>

<Input EXCHANGE_IN>

Module      im_file
# Modify the file path if it is needed
File        "D:\\Program Files\\Microsoft\\Exchange Server\\V15\\TransportRoles\\Logs\\MessageTracking\\MSGTRK????????*-*.log"
SavePos     TRUE
Exec if ($raw_event =~ /^#/) OR ($raw_event =~ /HealthMailbox/) drop();\
else\
{\
transform_alienvault_csv_exchange->parse_csv();\
$Message = $raw_event;\
$SourceName = "EXCHANGE-NXLOG";\
}
</Input>

<Output EXCHANGE_OUT>

Module      om_udp
Host        %OUTPUT_DESTINATION_ADDRESS%
Port        %OUTPUT_DESTINATION_PORT%
Exec $Message = to_json(); to_syslog_bsd();

</Output>

<Route EXCHANGE>

Path EXCHANGE_IN => EXCHANGE_OUT

</Route>



#######################################################################################################
####                                      IIS-NXLOG-Extended                                      #####
#### NOTE: USE THIS CONF FOR IIS LOGS WITH CS-HOST, SC-BYTES, CS-BYTES AND X-FORWARDED-FOR FIELDS #####
#######################################################################################################

<Extension IIS_w3c_extended>
  Module xm_csv
  Fields $date, $time, $s_ip, $cs_method, $cs_uri_stem, $cs_uri_query, $s_port, $cs_username, $c_ip, $cs_User_Agent, $cs_Referer, $cs_host, $sc_status, $sc_substatus, $sc_win32_status, $sc_bytes, $cs_bytes, $time_taken, $x-forwarded-for
  FieldTypes string, string, string, string, string, string, integer, string, string, string, string, string, integer, integer, integer, integer, integer,integer, string
  Delimiter ' '
</Extension>

<Input IIS_Extended_IN>
  Module im_file
  File "C:\\inetpub\\logs\\LogFiles\\W3SVC1\\u_ex*"
  SavePos TRUE
  Exec if $raw_event =~ /^#/ drop(); \
  else \
  { \
    IIS_w3c_extended->parse_csv(); \
    $EventTime = parsedate($date + " " + $time); \
    $SourceName = "IIS"; \
  }
</Input>

<Output IIS_Extended_OUT>
  Module om_udp
  Host %OUTPUT_DESTINATION_ADDRESS%
  Port %OUTPUT_DESTINATION_PORT%
  Exec $EventTime = strftime($EventTime, '%Y-%m-%d %H:%M:%S');
  Exec $Hostname = hostname_fqdn();
  Exec $Message = to_json(); to_syslog_bsd();
</Output>

<Route IIS_Extended_Route>
  Path	IIS_Extended_IN => IIS_Extended_OUT
</Route>

#######################################################################################################
####                                      IIS-NXLOG-Extended                                      #####
#######################################################################################################
