#
# Configuration for converting and sending Windows logs
# to multiple destinations.
#
# Last modification: 2021-02-03 by farrisk01@gmail.com
#

define ROOT C:\Program Files (x86)\nxlog
define OUTPUT_DESTINATION_ADDRESS **SENSOR_IP_ADDRESS**
define OUTPUT_DESTINATION_ADDRESS2 **SENSOR_IP_ADDRESS**
define OUTPUT_DESTINATION_PORT 514

Moduledir %ROOT%\modules
CacheDir %ROOT%\data
Pidfile %ROOT%\data\nxlog.pid
SpoolDir %ROOT%\data
LogFile %ROOT%\data\nxlog.log


<Extension json>
    Module      xm_json
</Extension>

<Extension syslog>
    Module      xm_syslog
</Extension>

<Input internal>
    Module      im_internal
</Input>

<Input eventlog>
    Module  im_msvistalog
    <QueryXML>
        <QueryList>
            <Query Id='0'>
                <Select Path="Application">*</Select>
                <Select Path="System">*</Select>
                <Select Path="Security">*</Select>
            </Query>
        </QueryList>
    </QueryXML>
    <Exec>
        if ($EventID == 5156) OR ($EventID == 5158)
            drop();
        else if ($Channel == 'Security') and ($EventID == 4624)
            $Message =~ s/\s*This event is generated when a logon session is created.*$//s;
        else if ($Channel == 'Security') and ($EventID == 4634)
            $Message =~ s/\s*This event is generated when a logon session is destroyed.*$//s;
        else if ($Channel == 'Security') and ($EventID == 4769)
            $Message =~ s/\s*This event is generated every time access is requested.*$//s;
        else if ($Channel == 'Security') and ($EventID == 4768)
            $Message =~ s/\s*Certificate information is only provided.*$//s;
        else if ($Channel == 'Security') and ($EventID == 4771)
            $Message =~ s/\s*Certificate information is only provided.*$//s;
        else if ($Channel == 'Security') and ($EventID == 4625)
            $Message =~ s/\s*This event is generated when a logon request fails.*$//s;

        # Update the $raw_event field
        $raw_event = $EventTime + ' ' + $Message;
    </Exec>
</Input>

<Output out>

Module om_udp
Host        %OUTPUT_DESTINATION_ADDRESS%
Port        %OUTPUT_DESTINATION_PORT%
Exec        $EventTime = integer($EventTime) / 1000000;
Exec        $EventReceivedTime = integer($EventReceivedTime) / 1000000;
Exec        $Message = to_json(); to_syslog_bsd();

</Output>

<Output out2>

Module om_udp
Host        %OUTPUT_DESTINATION_ADDRESS2%
Port        %OUTPUT_DESTINATION_PORT%
Exec        $EventTime = integer($EventTime) / 1000000;
Exec        $EventReceivedTime = integer($EventReceivedTime) / 1000000;
Exec        $Message = to_json(); to_syslog_bsd();

</Output>

<Route 1>
Path 	eventlog, internal => out, out2
</Route>
